#!../bin/python

import sys
from subprocess import CalledProcessError
import os
import logging

sys.path.append('/home/vyos/vyos-api')
from VyosSessionConfig import configsession as cs
from VyosSessionConfig import utils

LOGFILE = utils.get_config_params('log','filename')
vyatta_sbin_dir = utils.get_config_params('bin','vyatta_sbin_dir')
logging.basicConfig(filename=LOGFILE, level=logging.DEBUG)

class EmptyName(Exception): pass

class ExecutorFormator():
	"""
    Doctrings goes here..
    """
    def join_args(self,args,sep=" "):
        """
        Docstring goes here..
        """
        return sep.join(args)

    def call(self, args, name=""):
        """
        Docstring goes here..
        """
        if len(name) == 0:
            raise EmptyName("ERROR: operation name is required !")
        if name=="save":
            cmd1 = os.path.join(self.vyatta_sbindir,"vyatta-save-config.pl")
        else:
            cmd1 = os.path.join(self.vyatta_sbindir,"my_"+name)+" "+self.join_args(args)    
            cmd = self.SessConf.setup_config_session(self.shell_api_path)+cmd1
        try:
            subprocess.check_output(cmd, shell=True)
        except CalledProcessError:
            logging.debug("""ERROR:  invalid operation \ncheck session\'s state or the operation format """)

	def show(self,args):
        """
        Docstring goes here..
        """
        cmd = self.shell_api_path+" showCfg"+" "+self.join_args(args)
        output=subprocess.check_output(cmd, shell=True)
        logging.debug("\n%s" % output)
        return output

	def parse_show(self):
        """
        Docstring goes here..
        """
	    pass

#obj = ExecutorFormator()
#def set(args):
#       	obj.call(args, name="set")
	
#set(["service", "dns", "forwarding","listen-on", "eth0" ])
#obj.commit()
#obj.show(["service","dns"])

